import path from "node:path";
import { fileURLToPath } from "node:url";

import { fixupConfigRules } from "@eslint/compat";
import { FlatCompat } from "@eslint/eslintrc";
import js from "@eslint/js";
import eslintConfigPrettier from "eslint-config-prettier";
import importPlugin from "eslint-plugin-import";
import unusedImports from "eslint-plugin-unused-imports";
import globals from "globals";
import tseslint from "typescript-eslint";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const compat = new FlatCompat({
  baseDirectory: __dirname,
  recommendedConfig: js.configs.recommended,
  allConfig: js.configs.all,
});

export default [
  {
    ignores: [
      ".next/*",
      "env/*",
      "node_modules/*",
      "public/*",
      "src/generated/*",
      "amplify/*",
    ],
  },
  ...tseslint.configs.recommended,
  importPlugin.flatConfigs.recommended,
  ...compat.extends("next/core-web-vitals", "next/typescript"),
  ...fixupConfigRules(compat.extends("plugin:import/typescript")),
  {
    plugins: {
      "unused-imports": unusedImports,
    },

    languageOptions: {
      globals: {
        ...globals.browser,
      },
    },

    settings: {
      // https://www.npmjs.com/package//eslint-plugin-import#typescript
      "import/resolver": {
        // https://www.npmjs.com/package/eslint-import-resolver-typescript
        // In Monorepo, specify the path to the target project in the repository
        typescript: {
          project: ["frontend/real-shop"],
        },
        node: true,
      },
    },

    rules: {
      // https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/order.md
      "importPlugin/order": [
        "warn",
        {
          groups: [
            "builtin",
            "external",
            "internal",
            "parent",
            "sibling",
            "index",
            "object",
            "type",
          ],
          // Provide one line between groups
          "newlines-between": "always",
          // Define import types not processed by pathGroups
          pathGroupsExcludedImportTypes: ["builtin"],
          // Case-insensitive alphabetical alignment
          alphabetize: {
            order: "asc",
            caseInsensitive: true,
          },
          // Grouping by path
          pathGroups: [
            // CSS is placed at the end
            {
              pattern: "*.css",
              group: "index",
              position: "before",
            },
          ],
        },
      ],

      // https://www.npmjs.com/package/eslint-plugin-unused-imports
      "no-unused-vars": "off",
      "unused-imports/no-unused-imports": "error",

      "unused-imports/no-unused-vars": [
        "warn",
        {
          vars: "all",
          varsIgnorePattern: "^_",
          args: "after-used",
          argsIgnorePattern: "^_",
        },
      ],
    },
  },
  eslintConfigPrettier,
];
